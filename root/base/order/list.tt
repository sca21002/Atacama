<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<link rel="stylesheet" type="text/css" media="screen"
	href="[% c.uri_for_static('css/ui-lightness/jquery-ui-1.8.9.custom.css') %]" />
<link rel="stylesheet" type="text/css" media="screen"
	href="[% c.uri_for_static('css/jqGrid/ui.jqgrid.css') %]" />
<script type="text/javascript"
	src="[% c.uri_for_static('js/ext/jquery/jquery-1.5.min.js') %]"></script>
<script type="text/javascript"
	src="[% c.uri_for_static('js/ext/plugins/jquery/jqGrid/i18n/grid.locale-de.js') %]"></script>
<script type="text/javascript"
	src="[% c.uri_for_static('js/ext/plugins/jquery/jqGrid/jquery.jqGrid.min.js') %]"></script>

<script type="text/javascript">
        [% IF filters %] var filters_from_session = [% filters %]; [% END %]
	function showCatlink(cellvalue, options, rowObject) {
		var idUrl = "/order/" + options.rowId + "/edit";
		return "<a href='" + idUrl + "'>" + cellvalue + "</a>";

		data : {},

		load : function() {
			var the_cookie = document.cookie.split(';');
			console.debug("THE Cookie: " +document.cookie);
			if (the_cookie[0]) {
				the_cookie[0] = unescape(the_cookie[0]);
				console.debug(the_cookie[0]);

				try	{
				result = jQuery.parseJSON( the_cookie[0]);
				}
				catch(e) 	{
				// We report an error, and show the erronous JSON string (we replace all " by ', to prevent another error)
				result = jQuery.parseJSON( '{"code":"error","content":"' + e.replace(/"/g, "'") + '"}' );
				} 
					
			}
			return result;
		},

		save : function(expires, path) {
			var d = expires || new Date(2020, 02, 02);
			var p = path || '/';

			var jsonstring = JSON.stringify(this.data);

			document.cookie = escape(jsonstring) + ';path=' + p + ';expires='
					+ d.toUTCString();
		}

	}

	$(window).unload(function() {

		var filters = {
			order_id : $('#gs_order_id').val(),
			titel_isbd : $('#gs_titel_isbd').val(),
			projects : $('#gs_projects').val(),
			status : $('#gs_status').val()
		};
		console.debug(filters);

		prefs.data = {
			filter : filters,
			scol : $('#orders').jqGrid('getGridParam', 'sortname'),
			sord : $('#orders').jqGrid('getGridParam', 'sortorder'),
			page : $('#orders').jqGrid('getGridParam', 'page'),
			rows : $('#orders').jqGrid('getGridParam', 'rowNum')
		};

		prefs.save();
	});


    [% IF filters %] var filters_from_session = [% filters %]; [% END %]


   function showCatlink(cellvalue, options, rowObject) {
		var idUrl = "/order/" + options.rowId + "/edit";
		return "<a href='" + idUrl + "'>" + cellvalue + "</a>";

	}

	function createField(name, op, data) {
		var field = '{\"field\":\"' + name + '\",\"op\":\"' + op
				+ '\",\"data\":\"' + data + '\"}';
		return field;
	}

	function filterGrid(gridprefs) {
		var fields = "";
		var order_id = gridprefs.filter.order_id;
		var titel_isbd = gridprefs.filter.titel_isbd;
		var projects = gridprefs.filter.projects;
		var status = gridprefs.status;

		if (order_id != ""){
			fields += (fields.length == 0 ? "" : ",")
					+ createField("order_id", "bw", order_id); }
		if (titel_isbd != ""){
			fields += (fields.length == 0 ? "" : ",")
					+ createField("titel_isbd", "bw", titel_isbd); }
		if (projects != "" || projects !== "undefined") {
			fields += (fields.length == 0 ? "" : ",")
					+ createField("project_id", "eq", projects); }
/*		if (status != "" || status !== "undefined") {
			fields += (fields.length == 0 ? "" : ",")
					+ createField("status_id", "eq", status); }
*/
		var filters = '{\"groupOp\":\"AND\",\"rules\":[' + fields + ']}';
    	return filters;
	}



	

	$(document)
			.ready(
					function() {


						var gridprefs = prefs.load();

						jQuery("#orders")
								.jqGrid(
										{											
										 	url : "[% json_url %]",
											datatype : "local",
											colNames : [ 'Auftragsnr.',
													'Titel', 'Projekte',
													'Status' ],
											colModel : [
													{
														name : 'order_id',
														formatter : showCatlink,
														index : 'order_id',
														width : 100
													},
													{
														name : 'titel_isbd',
														sortable : false,
														index : 'titel_isbd',
														width : 300
													},
													{
														name : 'projects',
														index : 'project_id',
														sortable : true,
														width : 200,
														stype : 'select',
														editoptions : {
															value : ":Alle;[% FOR project IN projects %];[% project.project_id %]:[% project.name %][% END %]"
														}

													},
													{
														name : 'status',
														index : 'status_id',
														sortable : true,
														width : 80,
														stype : 'select',
														editoptions : {
															value : ":Alle[% FOR stat IN status %];[% stat.status_id %]:[% stat.name %][% END %]"
														}
													} ],
											rowNum : "20",
											height : "100%",
											width : '785',
											rowList : [ 10, 20, 30, 40, 50, 60,
													70, 80, 90, 100 ],
											pager : '#pager_orders',
											toppager: true,
											sortname : gridprefs.scol,
											gridview : true,
											viewrecords : true,
											sortorder : gridprefs.sord,
											caption : "Aufträge"
										});

						jQuery("#orders").jqGrid('navGrid', '#pager_orders', {
							del : false,
							add : false,
							edit : false,
							search : false
						});

						jQuery("#orders").jqGrid('filterToolbar', {
							stringResult : true,
							searchOnEnter : true
						});

						jQuery("#orders").jqGrid('navButtonAdd','#pager_orders',
								{caption:"Zurücksetzen", onClickButton:function()
							{ var grid = $("#orders");
							grid[0].clearToolbar();
							} }); 
						

						if (typeof gridprefs !== 'undefined'){
							$('#gs_order_id').val(gridprefs.filter.order_id);
							$('#gs_titel_isbd').val(gridprefs.filter.titel_isbd);
							$('#gs_projects').val(gridprefs.filter.projects);
							$('#gs_status').val(gridprefs.filter.status);

    
							filters = filterGrid(gridprefs);
							console.debug(gridprefs);
									
					    
					/*		$('#orders').jqGrid('setGridParam', {
								sortname : gridprefs.scol,
								sortorder : gridprefs.sord,
								page : gridprefs.page,
								rowNum : gridprefs.rows,
								filter: filters,
								search: true
							}).trigger("reloadGrid");
					*/		
						
							var data = $('#orders').jqGrid("getGridParam", "postData");
							data.search = true;
							data.filters = filters;
							data.hallodri = "Hallodri";
						
							$('#orders').jqGrid("setGridParam", { "postData": data,
								"datatype": "json",
								"search": "true" });
							$('#orders').trigger("reloadGrid",[{page:gridprefs.page}]);
			
						}
					

						

					});
</script>
<title>Aufträge</title>
</head>
<body>

<div id="nav_area">
<ul id="navigation" class="ui-widget">
	<li class="ui-state-default"><span class="ui-icon ui-icon-home"></span><a
		href="[% c.uri_for('/') %]"> Startseite</a></li>
	<li class="ui-state-default"><span class="ui-icon ui-icon-plus"></span><a
		href="[% c.uri_for('add') %]"> Auftrag anlegen</a></li>
</ul>
</div>

<div id="content">

<h1 class="main">Alle Auftr&auml;ge</h1>

<table id="orders"></table>
<div id="pager_orders"></div>
</div>
</body>
</html>
